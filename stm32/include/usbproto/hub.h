
#pragma once

#include <usbproto/usb.h> //for PACKED, stdint

struct USBDescriptorHUB {
	uint8_t bLength;
	uint8_t bDescriptorType;
	uint8_t bNbrPorts;
	uint16_t wHubCharacteristics;
	uint8_t bPwrOn2PwrGood;
	uint8_t bHubContrCurrent;
	uint8_t DeviceRemovable[0];//variable sized, padded to 8bit alignment
	//uint8_t PortPwrCtrlMask[0];
} PACKED;

#define USBHUB_FEATURE_C_HUB_LOCAL_POWER 0
#define USBHUB_FEATURE_C_HUB_OVER_CURRENT 1
#define USBHUB_FEATURE_PORT_CONNECTION 0
#define USBHUB_FEATURE_PORT_ENABLE 1
#define USBHUB_FEATURE_PORT_SUSPEND 2
#define USBHUB_FEATURE_PORT_OVER_CURRENT 3
#define USBHUB_FEATURE_PORT_RESET 4
#define USBHUB_FEATURE_PORT_POWER 8
#define USBHUB_FEATURE_PORT_LOW_SPEED 9
#define USBHUB_FEATURE_C_PORT_CONNECTION 16
#define USBHUB_FEATURE_C_PORT_ENABLE 17
#define USBHUB_FEATURE_C_PORT_SUSPEND 18
#define USBHUB_FEATURE_C_PORT_OVER_CURRENT 19
#define USBHUB_FEATURE_C_PORT_RESET 20
#define USBHUB_FEATURE_PORT_TEST 21
#define USBHUB_FEATURE_PORT_INDICATOR 22

#define USBHUB_PORT_STATUS_PORT_CONNECTION 0x1
#define USBHUB_PORT_STATUS_PORT_ENABLE 0x2
#define USBHUB_PORT_STATUS_PORT_SUSPEND 0x4
#define USBHUB_PORT_STATUS_PORT_OVER_CURRENT 0x8
#define USBHUB_PORT_STATUS_PORT_RESET 0x10
#define USBHUB_PORT_STATUS_PORT_POWER 0x100
#define USBHUB_PORT_STATUS_PORT_LOW_SPEED 0x200
#define USBHUB_PORT_STATUS_PORT_HIGH_SPEED 0x400
#define USBHUB_PORT_STATUS_PORT_TEST 0x800
#define USBHUB_PORT_STATUS_PORT_INDICATOR 0x1000

#define USBHUB_PORT_STATUS_C_PORT_CONNECTION 0x1
#define USBHUB_PORT_STATUS_C_PORT_ENABLE 0x2
#define USBHUB_PORT_STATUS_C_PORT_SUSPEND 0x4
#define USBHUB_PORT_STATUS_C_PORT_OVER_CURRENT 0x8
//set when the reset handling is complete and the port is in enabled state
#define USBHUB_PORT_STATUS_C_PORT_RESET 0x10
